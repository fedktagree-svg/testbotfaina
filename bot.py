from telegram import (
    Update, InlineKeyboardButton, InlineKeyboardMarkup,
    InputMediaPhoto, WebAppInfo, constants
)
from telegram.ext import (
    ApplicationBuilder, CommandHandler, CallbackQueryHandler,
    ContextTypes, Defaults
)
import os
import psycopg2
from psycopg2.extras import RealDictCursor
from dotenv import load_dotenv

# ==== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è ====
load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")
DB_URL = os.getenv("DATABASE_URL")

# Railway —Ç—Ä–µ–±—É–µ—Ç sslmode=require
if DB_URL and "sslmode=" not in DB_URL:
    DB_URL += ("&sslmode=require" if "?" in DB_URL else "?sslmode=require")

# ==== –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î ====
def get_conn():
    return psycopg2.connect(DB_URL, cursor_factory=RealDictCursor)

def init_db():
    with get_conn() as conn, conn.cursor() as cur:
        cur.execute("""
            CREATE TABLE IF NOT EXISTS users (
                chat_id BIGINT PRIMARY KEY,
                username TEXT,
                first_name TEXT,
                last_name TEXT,
                language_code TEXT,
                subscribed BOOLEAN DEFAULT TRUE
            );
        """)
    print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ users –≥–æ—Ç–æ–≤–∞")

def save_user(user):
    with get_conn() as conn, conn.cursor() as cur:
        cur.execute("""
            INSERT INTO users (chat_id, username, first_name, last_name, language_code)
            VALUES (%s, %s, %s, %s, %s)
            ON CONFLICT (chat_id) DO UPDATE SET
                username = EXCLUDED.username,
                first_name = EXCLUDED.first_name,
                last_name = EXCLUDED.last_name,
                language_code = EXCLUDED.language_code;
        """, (user.id, user.username, user.first_name, user.last_name, user.language_code))

# ==== –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ====
async def send_main_menu(query):
    greeting = (
        f"–ü—Ä–∏–≤–µ—Ç, {query.from_user.first_name} ü•∞\n\n"
        "<b>–ù–∞ —Å–≤—è–∑–∏ –æ—Å–Ω–æ–≤–∞—Ç–µ–ª–∏ —Å—Ç—É–¥–∏–∏ NEYROPH –∏ —Å–æ–∑–¥–∞—Ç–µ–ª–∏ –§–∞–∏–Ω—ã –†–∞–µ–≤—Å–∫–æ–π ‚Äî —Ç–æ–≥–æ —Å–∞–º–æ–≥–æ AI-–±–ª–æ–≥–µ—Ä–∞ ‚Ññ1 –≤ –†–æ—Å—Å–∏–∏...</b>\n\n"
        "–ú—ã —Å–æ–∑–¥–∞–µ–º —Ä–æ–ª–∏–∫–∏, –æ—Ç –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã —Å–º–µ—ë—Ç–µ—Å—å, —É–∑–Ω–∞—ë—Ç–µ —Å–µ–±—è, —Å–æ–±–∏—Ä–∞—è –±–æ–ª—å—à–∏–µ –æ—Ö–≤–∞—Ç—ã –∏ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –±—Ä–µ–Ω–¥—É üéÆ\n\n"
        "–ù–∏–∂–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–æ–π.\n"
        "–ù–∞–∂–∏–º–∞–π –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ ‚¨áÔ∏è"
    )
    keyboard = [
        [InlineKeyboardButton("üéì –û–±—É—á–µ–Ω–∏–µ", callback_data="learn")],
        [InlineKeyboardButton("üé• –ó–∞–∫–∞–∑–∞—Ç—å –≤–∏–¥–µ–æ", callback_data="video")],
        [InlineKeyboardButton("üé≠ –ó–∞–∫–∞–∑–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞", callback_data="character")],
        [InlineKeyboardButton("ü§ù –°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ / —Ä–µ–∫–ª–∞–º–∞", callback_data="promo")],
        [InlineKeyboardButton("üì∫ –ö–∞–Ω–∞–ª —Å—Ç—É–¥–∏–∏", url="https://t.me/neyroph")],
    ]
    await query.message.reply_text(greeting, reply_markup=InlineKeyboardMarkup(keyboard))

# ==== /start ====
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    save_user(user)

    keyboard = [
        [InlineKeyboardButton("‚úÖ –°–æ–≥–ª–∞—Å–µ–Ω", callback_data="agree")],
        [InlineKeyboardButton("‚ùå –ù–µ —Å–æ–≥–ª–∞—Å–µ–Ω", callback_data="disagree")]
    ]
    text = (
        "–ü—Ä–∏–≤–µ—Ç! –ü—Ä–µ–∂–¥–µ —á–µ–º –º—ã –Ω–∞—á–Ω—ë–º...\n\n"
        "‚ö†Ô∏è –ú—ã –∑–∞–±–æ—Ç–∏–º—Å—è –æ —Ç–≤–æ–µ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏.\n\n"
        "–ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É ¬´–°–æ–≥–ª–∞—Å–µ–Ω¬ª, —Ç—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—à—å, —á—Ç–æ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω(-–∞) —Å "
        "[–ü–æ–ª–∏—Ç–∏–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö](https://docs.google.com/document/d/1XHFjqbDKYhX5am-Ni2uQOO_FaoQhOcLcq7-UiZyQNlE/edit?usp=drive_link) "
        "–∏ –¥–∞—ë—à—å —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.\n\n"
        "‚¨áÔ∏è –í—ã–±–µ—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç –Ω–∏–∂–µ:"
    )
    await update.message.reply_text(text, reply_markup=InlineKeyboardMarkup(keyboard), parse_mode="Markdown")

# ==== –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ ====
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data in ["agree", "main_menu"]:
        await send_main_menu(query)

    elif query.data == "learn":
        caption = (
            "<b>üìπ –ó–¥–µ—Å—å ‚Äî –≤–∏–¥–µ–æ, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—Å—ë –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è.</b>\n"
    "<b>–ü–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è, —Ä–∞—Å—Å–∫–∞–∂—É, –∫—Ç–æ –º—ã, –∫–∞–∫ —Å–æ–∑–¥–∞—ë–º –ò–ò-–∫–æ–Ω—Ç–µ–Ω—Ç –∏ –∫–∞–∫ –∑–∞–ø—É—Å—Ç–∏–ª–∏ —Å–∞–º–æ–≥–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ–≥–æ AI-–±–ª–æ–≥–µ—Ä–∞ –≤ –†–æ—Å—Å–∏–∏ ‚Äî –§–∞–∏–Ω—É –†–∞–µ–≤—Å–∫—É—é. </b> üî•\n\n"
    "–í–Ω—É—Ç—Ä–∏ —Ç—ã —É–∑–Ω–∞–µ—à—å:\n"
    "‚úÖ 4 –∫–ª—é—á–µ–≤—ã—Ö –ø—Ä–∏–Ω—Ü–∏–ø–∞, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É—á–∏—Ç—ã–≤–∞—Ç—å –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, —á—Ç–æ–±—ã —Å–æ–±—Ä–∞—Ç—å –∏–º–µ–Ω–Ω–æ —Å–≤–æ—é –∞—É–¥–∏—Ç–æ—Ä–∏—é;\n"
    "‚úÖ –ö–∞–∫ –ø—Ä–∏–¥—É–º–∞—Ç—å –æ–±—Ä–∞–∑, –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Ü–µ–ø–∏—Ç, –∏ –ø–æ—á–µ–º—É –∏–º—è ‚Äî —ç—Ç–æ —É–∂–µ –ø–æ–ª–æ–≤–∏–Ω–∞ —É—Å–ø–µ—Ö–∞;\n"
    "‚úÖ –ö–∞–∫ —Ç–∞–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã –º–æ–Ω–µ—Ç–∏–∑–∏—Ä—É—é—Ç—Å—è –∏ –ø—Ä–∏–Ω–æ—Å—è—Ç –¥–µ–Ω—å–≥–∏ —É–∂–µ —Å –ø–µ—Ä–≤—ã—Ö —Ç—ã—Å—è—á –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤.\n\n"
    "<b>üß† –ò –≥–ª–∞–≤–Ω–æ–µ ‚Äî —Ä–∞—Å—Å–∫–∞–∂—É, —á–µ–º—É –º—ã –±—É–¥–µ–º —É—á–∏—Ç—å –Ω–∞ –æ–±—É—á–µ–Ω–∏–∏ü§´</b>"
        )
        keyboard = [
            [InlineKeyboardButton("üìù –ó–∞–ø–∏—Å—å –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ", web_app=WebAppInfo(url="https://ai-avatar.ru/learning"))],
            [InlineKeyboardButton("üîê –ó–∞–∫—Ä—ã—Ç—ã–π –∫–ª—É–±", url="https://t.me/close_channel_neyroph_bot")],
            [InlineKeyboardButton("üì∫ –ö–∞–Ω–∞–ª —Å—Ç—É–¥–∏–∏", url="https://t.me/neyroph")],
            [InlineKeyboardButton("üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ]
        await query.message.reply_video(
            video="BAACAgIAAxkBAAOjaJQ14sNe900dE7DPLhQygUTwxRUAAg1oAAKfAqFIVvpOlsTmj_g2BA",
            caption=caption,
            reply_markup=InlineKeyboardMarkup(keyboard)
        )

    elif query.data == "video":
        text = (
            "üéÆ –ú—ã ‚Äî —Å—Ç—É–¥–∏—è NEYROPH. –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ —Å–æ–∑–¥–∞—ë–º –≤–∏–¥–µ–æ-–∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –±—Ä–µ–Ω–¥–æ–≤ –∏ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤.\n\n"
            "üî• –†–µ–∫–ª–∞–º–Ω—ã–µ –∫—Ä–µ–∞—Ç–∏–≤—ã, —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ —Ä–æ–ª–∏–∫–∏, Reels –Ω–∞ –ª—é–±—É—é —Ç–µ–º—É ‚Äî –¥–µ–ª–∞–µ–º —Å –¥—É—à–æ–π –∏ –∫–∞—á–µ—Å—Ç–≤–æ–º.\n\n"
            "–í—ã –º–æ–∂–µ—Ç–µ:\n‚Äî –ø–æ–ª—É—á–∏—Ç—å –≥–æ—Ç–æ–≤—ã–π —Ä–æ–ª–∏–∫ –ø–æ–¥ –∑–∞–¥–∞—á—É\n‚Äî –æ–±—Å—É–¥–∏—Ç—å —Å—Ü–µ–Ω–∞—Ä–∏–π –∏ –∏–¥–µ—é\n‚Äî –¥–æ–≤–µ—Ä–∏—Ç—å—Å—è –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é"
        )
        keyboard = [
            [InlineKeyboardButton("üì∫ –ö–∞–Ω–∞–ª —Å—Ç—É–¥–∏–∏", url="https://t.me/neyroph")],
            [InlineKeyboardButton("‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ª–∏—á–∫—É", url="https://t.me/ManagerNeyroph")],
            [InlineKeyboardButton("üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ]
        await query.message.reply_text(text, reply_markup=InlineKeyboardMarkup(keyboard))

    elif query.data == "character":
        text = (
            "üé≠ –ú—ã –º–æ–∂–µ–º —Å–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –¥–ª—è –≤–∞—Å –∏–ª–∏ –≤–∞—à–µ–≥–æ –±—Ä–µ–Ω–¥–∞ —Ç–∞–∫ –∂–µ –º–æ—â–Ω–æ, –∫–∞–∫ –§–∞–∏–Ω—É –†–∞–Ω–µ–≤—Å–∫—É—é:\n\n"
            "üí• 120 000 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –∑–∞ 1,5 –º–µ—Å—è—Ü–∞\nüé• –î–µ—Å—è—Ç–∫–∏ Reels ‚Äî –ø–æ –º–ª–Ω –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤\n\n"
            "–¢–∞–∫–æ–π —Ñ–æ—Ä–º–∞—Ç –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –±—Ä–µ–Ω–¥–∞, —Ç–æ–≤–∞—Ä–∞, –ø—Ä–æ–µ–∫—Ç–∞ –∏–ª–∏ –∏–Ω—Ñ–æ–ø—Ä–æ–¥—É–∫—Ç–∞!\n\n"
            "–°–æ–∑–¥–∞—ë–º –∫–∞–∫ –ª–∏—á–Ω—ã–π –æ–±—Ä–∞–∑, —Ç–∞–∫ –∏ –±—Ä–µ–Ω–¥-–ø–µ—Ä—Å–æ–Ω–∞–∂–∞.\n\n"
            "üí¨ –ù–∞–ø–∏—à–∏ –Ω–∞–º ‚Äî –æ–±—Å—É–¥–∏–º, –∫–∞–∫–æ–π —Ñ–æ—Ä–º–∞—Ç –ø–æ–¥–æ–π–¥—ë—Ç —Ç–µ–±–µ!"
        )
        keyboard = [
            [InlineKeyboardButton("‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ª–∏—á–∫—É", url="https://t.me/ManagerNeyroph")],
            [InlineKeyboardButton("üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ]
        await query.message.reply_text(text, reply_markup=InlineKeyboardMarkup(keyboard))

    elif query.data == "promo":
        text = (
            "üéÆ –°–æ–∑–¥–∞–Ω–∏–µ reels —Å –≤–∞—à–∏–º –±—Ä–µ–Ω–¥–æ–º\n\n"
            "–¢—ã —Ö–æ—á–µ—à—å, —á—Ç–æ–±—ã –æ —Ç–≤–æ—ë–º –ø—Ä–æ–¥—É–∫—Ç–µ –Ω–µ –ø—Ä–æ—Å—Ç–æ –∑–Ω–∞–ª–∏ ‚Äî —Ç—ã —Ö–æ—á–µ—à—å, —á—Ç–æ–±—ã –∏–º –≤–æ—Å—Ö–∏—â–∞–ª–∏—Å—å, —Å–æ—Ö—Ä–∞–Ω—è–ª–∏ –∏ –ø–æ–∫—É–ø–∞–ª–∏.\n\n"
            "–ú—ã —É–º–µ–º –¥–µ–ª–∞—Ç—å Reels, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –≤—ã–≥–ª—è–¥—è—Ç –∫–∞–∫ —Ä–µ–∫–ª–∞–º–∞. –≠—Ç–æ –º–∏–Ω–∏-—Å—é–∂–µ—Ç, –≥–¥–µ –±—Ä–µ–Ω–¥ ‚Äî —á–∞—Å—Ç—å –∏—Å—Ç–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–π –∏–¥–µ–∞–ª—å–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω –≤ —Ç–µ–º–∞—Ç–∏–∫—É –∏ –∫–æ–Ω—Ü–µ–ø—Ü–∏—é –ø—Ä–æ—Ñ–∏–ª—è.\n\n"
            "üì¶ –ß—Ç–æ –≤—Ö–æ–¥–∏—Ç:\n"
            "‚úÖ –°—Ü–µ–Ω–∞—Ä–∏–π –ø–æ–¥ –≤–∞—à—É —Ü–µ–ª—å\n"
            "‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞ ‚Äî —á–µ—Ä–µ–∑ —ç–º–æ—Ü–∏–∏ –∏ —Å—Ç–æ—Ä–∏—Ç–µ–ª–ª–∏–Ω–≥\n"
            "‚úÖ –û–∑–≤—É—á–∫–∞ –æ—Ç –ª–∏—Ü–∞ –§–∞–∏–Ω—ã\n"
            "‚úÖ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ –ª–µ–Ω—Ç—É (—Å —Å–æ–∞–≤—Ç–æ—Ä—Å—Ç–≤–æ–º, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ) + —Å—Ç–æ—Ä–∏—Å\n\n"
            "üåü –≠—Ç–æ –ø–æ–¥–æ–π–¥—ë—Ç, –µ—Å–ª–∏:\n"
            "‚Äî –£ —Ç–µ–±—è –∫–ª–∞—Å—Å–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç –∏ —Ç—ã —Ö–æ—á–µ—à—å, —á—Ç–æ–±—ã –≤–µ—Å—å –º–∏—Ä –æ –Ω—ë–º —É–∑–Ω–∞–ª\n"
            "‚Äî –¢–µ–±–µ –≤–∞–∂–Ω–∞ —ç–º–æ—Ü–∏—è, —Å—Ç–∏–ª—å –∏ –≥–ª—É–±–∏–Ω–∞ –ø–æ–¥–∞—á–∏\n\n"
            "–ê —Ç–µ–ø–µ—Ä—å üëá"
        )
        keyboard = [
            [InlineKeyboardButton("üìä –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É", callback_data="stats")],
            [InlineKeyboardButton("üí∞ –£–∑–Ω–∞—Ç—å —Ü–µ–Ω—ã", callback_data="pricing")],
            [InlineKeyboardButton("‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ª–∏—á–∫—É", url="https://t.me/ManagerNeyroph")],
            [InlineKeyboardButton("üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ]
        await query.message.reply_text(text, reply_markup=InlineKeyboardMarkup(keyboard), parse_mode="Markdown")

    elif query.data == "stats":
        with open("stat1.jpg", "rb") as img1, open("stat2.jpg", "rb") as img2, open("stat3.jpg", "rb") as img3:
            media = [InputMediaPhoto(img1), InputMediaPhoto(img2), InputMediaPhoto(img3)]
            await query.message.reply_media_group(media)

    elif query.data == "pricing":
        text = (
            "üí∞ –°–¢–û–ò–ú–û–°–¢–¨: –æ—Ç 35 000 —Ä—É–±–ª–µ–π\n"
            "(–∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∑–∞–¥–∞—á–∏, –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Ä–æ–ª–∏–∫–∞)\n\n"
            "üìå –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ–º:\n"
            "‚ñ™Ô∏è –¢—ã –ø–∏—à–µ—à—å –≤ –ª–∏—á–∫—É ‚Äî –∫—Ç–æ —Ç—ã –∏ —á—Ç–æ –ø—Ä–æ–¥–≤–∏–≥–∞–µ—à—å\n"
            "‚ñ™Ô∏è –ú—ã –∏–∑—É—á–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç –∏ –∑–∞–¥–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã\n"
            "‚ñ™Ô∏è –î–∞–µ–º —Ç–æ—á–Ω—É—é —Ü–µ–Ω—É\n"
            "‚ñ™Ô∏è –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∏–¥–µ—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –æ—Ä–≥–∞–Ω–∏—á–Ω–æ –≤–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –≤ –ø—Ä–æ—Ñ–∏–ª—å\n"
            "‚ñ™Ô∏è –°–æ–∑–¥–∞–µ–º –∏ –º–æ–Ω—Ç–∏—Ä—É–µ–º —Ä–æ–ª–∏–∫\n"
            "‚ñ™Ô∏è –ü—É–±–ª–∏–∫—É–µ–º Reels\n"
            "‚ñ™Ô∏è –¢—ã –ø–æ–ª—É—á–∞–µ—à—å –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã, –∞ –∑–∞—è–≤–∫–∏ –∏ –∫–ª–∏–µ–Ω—Ç–æ–≤\n\n"
            "–í–∞–∂–Ω–æ: –º—ã –±–µ—Ä–µ–º –Ω–∞ —Ä–µ–∫–ª–∞–º—É –Ω–µ –≤—Å–µ—Ö. –¢–æ–ª—å–∫–æ —Ç–µ –±—Ä–µ–Ω–¥—ã, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —É–≤–µ—Ä–µ–Ω—ã –∏ –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∞—Ç —ç—Ç–∏—á–µ—Å–∫–∏–º –ø—Ä–∏–Ω—Ü–∏–ø–∞–º."
        )
        keyboard = [
            [InlineKeyboardButton("‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ª–∏—á–∫—É", url="https://t.me/ManagerNeyroph")],
            [InlineKeyboardButton("üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ]
        await query.message.reply_text(text, reply_markup=InlineKeyboardMarkup(keyboard))

    # ==== –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ====
# ==== –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ====
def main():
    init_db()

    defaults = Defaults(parse_mode=constants.ParseMode.HTML)
    app = ApplicationBuilder().token(TOKEN).defaults(defaults).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_handler))

    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    app.run_polling()

if __name__ == "__main__":
    main()
